// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.25.0
// source: followed.sql

package database

import (
	"context"
)

const getFollowed = `-- name: GetFollowed :many
Select id, created_at, account_name, hashtag, puuid, region FROM follow_users
`

func (q *Queries) GetFollowed(ctx context.Context) ([]FollowUser, error) {
	rows, err := q.db.QueryContext(ctx, getFollowed)
	if err != nil {
		return nil, err
	}
	defer rows.Close()
	var items []FollowUser
	for rows.Next() {
		var i FollowUser
		if err := rows.Scan(
			&i.ID,
			&i.CreatedAt,
			&i.AccountName,
			&i.Hashtag,
			&i.Puuid,
			&i.Region,
		); err != nil {
			return nil, err
		}
		items = append(items, i)
	}
	if err := rows.Close(); err != nil {
		return nil, err
	}
	if err := rows.Err(); err != nil {
		return nil, err
	}
	return items, nil
}
